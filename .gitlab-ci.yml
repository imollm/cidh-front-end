stages:
  - install
  - lint
  - restore-db
  - e2e
  - build
  - deploy

variables:
  npm_config_cache: '$CI_PROJECT_DIR/.npm'
  CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/Cypress'

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/*
    - cache/Cypress
    - node_modules
    - dist/cidh-front-end
    - lint
    - e2e
    - build
    - deploy

####################################
#### INSTALL NODE DEPENDENCIES  ####
####################################
install:
  stage: install
  image: node:14.15.5-alpine3.13
  script:
    - npm ci
  cache:
    paths:
      - "node_modules"
  only:
    refs:
      - merge_request
    variables:
        - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
        - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"

###################################
### LINTER STAGE TO CHECK CODE  ###
###################################
lint:
  stage: lint
  image: node:14.15-alpine3.13
  script:
    - npm run lint
  cache:
    paths:
      - "node_modules"
  only:
    refs:
      - merge_request
    variables:
        - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
        - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"

####################################################
### RESTORE BACKEND DATABASE TO ENSURE E2E TESTS ###
####################################################
restore-db:
  image: kroniak/ssh-client
  stage: restore-db
  environment:
    name: production
    url: https://culture.indahou.se
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$MASTER_SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan culture.indahou.se >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh "$MASTER_SSH_USER"@culture.indahou.se 'chmod 700 -R /root/dev/pdp/cidh-back-end'
    - ssh "$MASTER_SSH_USER"@culture.indahou.se 'cd /root/dev/pdp/cidh-back-end && make clean && make init'
  only:
      refs:
        - merge_request
      variables:
          - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
          - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"

##################################
### EXECUTE TESTS END TO END  ###
##################################
e2e:
  stage: e2e
  image: cypress/browsers:node14.15.0-chrome86-ff82
  script:
    - npm run build:prod
    - npm run cy:verify
    - npm run e2e-run:ci
  artifacts:
    when: always
    paths:
      - "cypress/videos/**/*.mp4"
      - "cypress/screenshots/**/*.png"
      - "dist/cidh-front-end"
    expire_in: 1 days
  only:
      refs:
        - merge_request
      variables:
          - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
          - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"

########################
#### BUILD PROJECT  ####
########################
build:
  stage: build
  image: node:14.15-alpine3.13
  script:
    - npm ci
    - npm run build:prod
  cache:
    paths:
      - "dist/cidh-front-end"
  only:
    refs:
      - main
    
########################
#### DEPLOY PROJECT  ###
########################
deploy:
  stage: deploy
  image: kroniak/ssh-client
  environment:
    name: production
    url: https://culture.indahou.se
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$MASTER_SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan culture.indahou.se >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp -r dist/cidh-front-end/ "$MASTER_SSH_USER"@culture.indahou.se:/var/www/html
    - scp docker-compose.yml "$MASTER_SSH_USER"@culture.indahou.se:/var/www/html
    - scp nginx.conf "$MASTER_SSH_USER"@culture.indahou.se:/var/www/html
    - ssh "$MASTER_SSH_USER"@culture.indahou.se 'find /var/www/html/ -type f -exec chmod 644 {} \+;'
    - ssh "$MASTER_SSH_USER"@culture.indahou.se 'find /var/www/html/ -type d -exec chmod 755 {} \+;'
    - ssh "$MASTER_SSH_USER"@culture.indahou.se 'docker-compose -f /var/www/html/docker-compose.yml down'
    - ssh "$MASTER_SSH_USER"@culture.indahou.se 'docker-compose -f /var/www/html/docker-compose.yml up -d'
  only:
      refs:
        - main
